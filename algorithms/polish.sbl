externals ( stem )

// escape symbols for substituting polish characters
stringescapes { }

/* Special characters in Unicode Latin Extended-A */
// special vowels
stringdef a'   '{U+0105}'  // ą a + ogonek
stringdef e'   '{U+0119}'  // ę e + ogonek
stringdef o'   '{U+00F3}'  // ó o + acute

// special consonants
stringdef c'   '{U+0107}'  // ć c + acute
stringdef l\   '{U+0142}'  // ł l + stroke
stringdef n'   '{U+0144}'  // ń n + acute
stringdef s'   '{U+015B}'  // ś s + acute
stringdef z'   '{U+017A}'  // ź z + acute
stringdef z.   '{U+017C}'  // ż z + dot

// [C](VC)^m[V|C]
// definitions of variables for
// p1 - position of m = 0
integers ( p1 )

// groupings
// v - polish vowels
groupings ( v )

// v - all polish vowels
define v 'aeiyou{a'}{e'}{o'}'

// all polish stemmer routines
routines (
  A1 A3 B1 B1l B2ce B2cei B3u B3w B4ni B4r C3 D1c0i generic_noun noun V01 V03 V04 V05 V06 V06y V08ujeiwa V08ujeywa generic_verb verb
)

backwardmode (

  define A1 as ( //spec
    [substring] among (
      'ego' 'm' 'ch' 'mi' 'a' 'ej' '{a'}' // 'e', 'em', 'emu' deleted bcs of understemming
    )
    
    test 'i'
    delete
  )

  define A3 as ( //spec
    [substring] among (
      'ki' 'kiego' 'kiemu' 'kim' 'cy' 'kie' 'kich' 'kimi' 
      'ka' 'kiej' 'k{a'}'
    )
    
    test 's'
    delete
  )

  define B1 as ( //spec
    [substring] among (
      'ia' 'iowi' 'iem' 'iu' 'iom' 'iami' 'iach' 'i{o'}w' // 'i', 'ie' deleted bcs of understemming
    )
    
    test 'b' or 'p' or 'm' or 'w' //TODO: specjalne przypadki np. Bolcie
    delete
  )

  define B1l as ( //spec
    [substring] among (
      'a' 'owi' 'u' 'om' 'ami' 'ach' // 'i', 'e', 'em' deleted bcs of understemming
    )
    
    test 'l'
    delete
  )

  define B2ce as ( //spec
    [substring] among (
      'ec' 'ca' 'cowi' 'cem' 'cu' 'cy' 'ce' 'c{o'}w' 'com' 'cami' 'cach'
    )
    
    test 'j' or 'l' or '{z.}'
    delete
  )

  define B2cei as ( //spec
    [substring] among (
      'iec' 'ca' 'cowi' 'cem' 'cu' 'cy' 'ce' 'c{o'}w' 'com' 'cami' 'cach'
    )
    
    test 'w' //TODO some exceptions
    delete
  )

  define B3u as ( //spec
    [substring] among (
      'u' 'owi' 'iem' '{o'}w' 'om' 'ami' 'ach' // 'i' deleted bcs of understemming
    )

    test 'k' or 'g'
    delete
  )

  define B3w as ( //spec
    [substring] among (
      'a' 'owi' 'iem' 'u' '{o'}w' 'om' 'ami' 'ach' // 'i', 'owie' deleted bcs of understemming
    )

    test 'k' or 'g'
    delete
  )

  define B4ni as ( //spec
    [substring] among (
      'in' 'ina' 'inowi' 'inem' 'inie' 'y' 'om' 'ami' 'ach' '{o'}w' // 'ie' deleted bcs of understemming
    )

    test 'n'
    delete
  )

  define B4r as ( //spec
    [substring] among (
      'u' 'owi' 'ze' 'y' '{o'}w' 'om' 'ami' 'ach' 'a' 'zy' // 'owie', 'em' deleted bcs of understemming
    )

    test 'r'
    delete
  )

  define C3 as ( //spec
    [substring] among (
      'a' 'u' 'iem' 'om' 'ami' 'ach' // 'e' deleted bcs of understemming
    )

    test 'k' or 'g'
    delete
  )

  define D1c0i as ( //spec
    [substring] among (
      '{c'}' 'ci' 'ci{a'}' 'ciom' 'ciami' 'ciach'
    )

    test '{s'}'
    delete
  )

  define generic_noun as (
    [substring] among (
      'y' 'ego' 'emu' 'ym' 'e' 'ych' 'ymi' 'owie' 'em'
      '{o'}w' 'om' 'ami' 'ach' 'i'
      'a' 'ej' '{a'}' //conflicts with A3 for sure
      '{n'}' 'nia' 'niowi' 'niem' 'niu' 'nie' 'ni' 'niom' 'niami' 'niach' 'ni{o'}w'
      '{s'}' 'sia' 'siowi' 'siem' 'siu' 'sie' 'si' 'siom' 'siami' 'siach' 'si{o'}w'
      'niec' '{n'}ca' '{n'}cowi' '{n'}cem' '{n'}cu' '{n'}cy' '{n'}ce' '{n'}c{o'}w' '{n'}com' '{n'}cami' '{n'}cach'
      'owi' 'u'
      'g' 'ga' 'gowi' 'giem' 'gu' 'dzy' 'gi' 'g{o'}w' 'gom' 'gami' 'gach'
      'k' 'ka' 'kowi' 'kiem' 'ku' 'cy' 'ki' 'k{o'}w' 'kom' 'kami' 'kach' 'ek' 'kowie'
      'ie' //overstemming: 'akwamary-nie'
      'cie' 'cia' 'ciu' 'ciem' '{c'}' 'ciom' 'ciami' 'ciach'
      
      
      'o'
      '{e'}'
      
      'ce' 'k{e'}' 'k{a'}' 'ko'
      
    )

    delete
  )

  define noun as (
    A1 or A3 or B1 or B1l or B2ce or B2cei or B3u or B3w or B4ni or B4r or C3 or D1c0i or generic_noun
  )

  define V01 as ( //spec
    [substring] among (
      'm' 'j{a'}' 'j' '{c'}' '{l\}' 'l' 'n' '{n'}' 'ni'
    )

    test 'a'
    delete
  )

  define V03 as (
    [substring] among (
      'eje' 'ej{e'}' 'ej{a'}' 'ej' 'e{c'}' 'a{l\}' 'aw' 'el' 'an' 'en' 'e{n'}'
    )

    delete
  )

  define V04 as (
    [substring] among (
      'uje' 'uj{e'}' 'uj{a'}' 'uj' 'owa{c'}' 'owa{l\}' 'owaw' 'owal' 'owan' 'owa{n'}' 'owani'
    )

    delete
  )

  define V05 as (
    [substring] among (
      'nie' 'n{e'}' 'n{a'}' 'nij' 'n{a'}{c'}' '{l\}' 'l' 'ni{e'}t' 'ni{e'}c' 'ni{e'}{c'}' 'ni{e'}ci'
      'ie' '{e'}' '{a'}' 'ij' '{a'}{c'}' '{a'}{l\}' '{a'}w' '{e'}{l\}' '{e'}l' 'i{e'}t' 'i{e'}c' 'i{e'}{c'}' 'i{e'}ci'
      '{n'}' 'n{a'}{l\}' 'n{a'}w' 'n{e'}{l\}' 'n{e'}l' //TODO check for vowel
    )

    delete
  )

  define V06 as (
    [substring] among (
      'ci' 'c{e'}' 'c{a'}' '{c'}' 'ci{c'}' 'ci{l\}' 'ciw' 'cil' 'con' 'cen' 'ce{n'}' 'ceni'
      'i' 'i{e'}' 'i{a'}' 'i{c'}' 'i{l\}' 'il' 'ion' 'ien' 'ie{n'}' 'ieni'
      '{e'}' '{a'}' 'j' '{l\}' 'w' 'l' 'on' 'en' 'e{n'}' 'eni'
      'iw'
      'zi' 'z{e'}' 'z{a'}' '{z'}' 'zi{c'}' 'zi{l\}' 'ziw' 'zil' 'zon' 'zen' 'ze{n'}' 'zeni'
    )

    delete
  )

  define V06y as ( //spec
    [substring] among (
      'y' '{e'}' '{a'}' 'y{c'}' 'y{l\}' 'yw' 'yl' 'on' 'en' 'e{n'}' 'eni'
    )

    test 'z' or '{z.}'
    delete
  )

  define V08ujeiwa as ( //spec
    [substring] among (
      'uje' 'uj{e'}' 'uj{a'}' 'uj' 'iwa{c'}' 'iwa{l\}' 'iwaw' 'iwal' 'iwan' 'iwa{n'}' 'iwani'
    )

    test 'k' or 'g' or 'h'
    delete
  )

  define V08ujeywa as (
    [substring] among (
      'uje' 'uj{e'}' 'uj{a'}' 'uj' 'ywa{c'}' 'ywa{l\}' 'ywaw' 'ywal' 'ywan' 'ywa{n'}' 'ywani'
    )

    delete
  )

  define generic_verb as (
    [substring] among (
      'eje' 'ej{e'}' 'ej{a'}' 'ej' 'e{c'}' 'a{l\}' 'aw' 'el' 'an' 'en' 'e{n'}'
      'uje' 'uj{e'}' 'uj{a'}' 'uj' 'owa{c'}' 'owa{l\}' 'owaw' 'owal' 'owan' 'owa{n'}' 'owani'
      'nie' 'n{e'}' 'n{a'}' 'nij' 'n{a'}{c'}' '{l\}' 'l' 'ni{e'}t' 'ni{e'}c' 'ni{e'}{c'}' 'ni{e'}ci'
      'ie' '{e'}' '{a'}' 'ij' '{a'}{c'}' '{a'}{l\}' '{a'}w' '{e'}{l\}' '{e'}l' 'i{e'}t' 'i{e'}c' 'i{e'}{c'}' 'i{e'}ci'
      '{n'}' 'n{a'}{l\}' 'n{a'}w' 'n{e'}{l\}' 'n{e'}l' //TODO check for vowel
      'ci' 'c{e'}' 'c{a'}' '{c'}' 'ci{c'}' 'ci{l\}' 'ciw' 'cil' 'con' 'cen' 'ce{n'}' 'ceni'
      'i' 'i{e'}' 'i{a'}' 'i{c'}' 'i{l\}' 'il' 'ion' 'ien' 'ie{n'}' 'ieni'
      'j' 'w' 'on' 'eni'
      'iw'
      'zi' 'z{e'}' 'z{a'}' '{z'}' 'zi{c'}' 'zi{l\}' 'ziw' 'zil' 'zon' 'zen' 'ze{n'}' 'zeni'
      'ywa{c'}' 'ywa{l\}' 'ywaw' 'ywal' 'ywan' 'ywa{n'}' 'ywani'
    )

    delete
  )

  define verb as (
    V06y or V08ujeiwa or generic_verb or V01
  )

)

define stem as (

  $p1 = limit

  backwards (
    do (noun or verb)
  )

)
